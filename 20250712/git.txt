Git 現場の流れ(既存プロジェクト有り)

1ターミナルで作業用フォルダに移動しgit clone

//ブランチ指定なし
git clone [リポリトジのアドレス]

//ブランチ指定あり ※あまりやらない
git clone -b [ブランチ名] [リポジトリのアドレス]


2ローカルでブランチを切って移動

git checkout -b [ブランチ名]


3ローカルで機能の追加や変更を行う


4追加、変更点をステージング

//追加、変更ファイル指定なし ※使用注意⚠️
git add -A

//追加、変更ファイル指定あり
git add [変更ファイル名]


5ステージングファイルをコミット

git commit -m “コメント”


6リモートリポジトリに現在のローカルブランチ名と同じ名前のリモートブランチを追加してプッシュ

git push origin ［ブランチ名］
※ origin の正体 [git clone リポジトリのアドレス]とした際に origin = [アドレス] のように代入してくれている。
上記を踏まえると次のように書き換えることができる　git push https://github.com/f-ikeuchi/git_flow.git [ブランチ名]


7 pullリクエストを行いマージが完了したらリモート、ローカルともにブランチを消去
//現場によってリモートブランチを残す場合もある


8ローカルを最新の状態にする
git pull origin [ブランチ名]


おまけ
git push origin ［ブランチ名］
git pull origin [ブランチ名]

この２つのコマンドの［ブランチ名］の部分の本来の書き方は

［リモートブランチ名:ローカルブランチ名］

のように【:】でリモートとローカルを区切り、明示的に書くことも可能

例
git push origin develop:develop
git pull origin develop:develop

しかし
リモート、ローカル共に同じブランチ名であることが基本、その場合省略が可能なので
git push origin ［ブランチ名］
git pull origin [ブランチ名]
このような書き方になっている